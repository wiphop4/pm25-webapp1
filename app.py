import streamlit as st
import numpy as np
import tensorflow as tf
import joblib
from datetime import datetime
from tensorflow.keras import layers, Model

# ------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• PINN --------
def build_pinn(n_hidden=3, n_units=64):
    inp = tf.keras.Input(shape=(3,))
    x = inp
    for _ in range(n_hidden):
        x = layers.Dense(n_units, activation="tanh", kernel_initializer="glorot_normal")(x)
    out = layers.Dense(1)(x)
    return Model(inp, out)

# ------- ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏´‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å --------
model = build_pinn()
model = tf.keras.models.load_model("pm25_pinn.h5")


# ------- ‡πÇ‡∏´‡∏•‡∏î scaler --------
scaler_x  = joblib.load("scaler_x.pkl")
scaler_y  = joblib.load("scaler_y.pkl")

# ------- ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡∏≠‡∏á -------
CITY_DB = {
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡πÑ‡∏ó‡∏£": (13.725, 100.508),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏™‡∏≤‡∏ô": (13.735, 100.504),
    "‡∏ö‡∏≤‡∏á‡∏•‡∏≥‡∏†‡∏π‡∏•‡πà‡∏≤‡∏á": (13.715, 100.501),
    "‡∏™‡∏°‡πÄ‡∏î‡πá‡∏à‡πÄ‡∏à‡πâ‡∏≤‡∏û‡∏£‡∏∞‡∏¢‡∏≤": (13.731, 100.497),
    "‡∏ó‡∏£‡∏≤‡∏¢‡∏Å‡∏≠‡∏á‡∏î‡∏¥‡∏ô": (13.854, 100.745),
    "‡∏ó‡∏£‡∏≤‡∏¢‡∏Å‡∏≠‡∏á‡∏î‡∏¥‡∏ô‡πÉ‡∏ï‡πâ": (13.861, 100.786),
    "‡∏ö‡∏≤‡∏á‡∏ä‡∏±‡∏ô": (13.839, 100.7),
    "‡∏™‡∏≤‡∏°‡∏ß‡∏≤‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å": (13.889, 100.708),
    "‡∏™‡∏≤‡∏°‡∏ß‡∏≤‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å": (13.896, 100.76),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡∏ô": (13.723, 100.571),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢": (13.71, 100.57),
    "‡∏û‡∏£‡∏∞‡πÇ‡∏Ç‡∏ô‡∏á": (13.707, 100.595),
    "‡∏Ñ‡∏±‡∏ô‡∏ô‡∏≤‡∏¢‡∏≤‡∏ß": (13.821, 100.677),
    "‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£": (13.82861, 100.5597),
    "‡∏à‡∏≠‡∏°‡∏û‡∏•": (13.82861, 100.5597),
    "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πÄ‡∏Å‡∏©‡∏°": (13.82861, 100.5597),
    "‡∏•‡∏≤‡∏î‡∏¢‡∏≤‡∏ß": (13.826, 100.565),
    "‡πÄ‡∏™‡∏ô‡∏≤‡∏ô‡∏¥‡∏Ñ‡∏°": (13.82861, 100.5597),
    "‡∏à‡∏≠‡∏°‡∏ó‡∏≠‡∏á": (13.693, 100.468),
    "‡∏ö‡∏≤‡∏á‡∏Ç‡∏∏‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô": (13.694, 100.45),
    "‡∏ö‡∏≤‡∏á‡∏Ñ‡πâ‡∏≠": (13.702, 100.476),
    "‡∏ö‡∏≤‡∏á‡∏°‡∏î": (13.672, 100.468),
    "‡∏™‡∏µ‡∏Å‡∏±‡∏ô": (13.925, 100.593),
    "‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏á": (13.778, 100.567),
    "‡∏î‡∏∏‡∏™‡∏¥‡∏ï": (13.772, 100.513),
    "‡∏ñ‡∏ô‡∏ô‡∏ô‡∏Ñ‡∏£‡πÑ‡∏ä‡∏¢‡∏®‡∏£‡∏µ": (13.789, 100.522),
    "‡∏ß‡∏ä‡∏¥‡∏£‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•": (13.778, 100.505),
    "‡∏™‡∏ß‡∏ô‡∏à‡∏¥‡∏ï‡∏£‡∏•‡∏î‡∏≤": (13.767, 100.52),
    "‡∏™‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡∏°‡∏´‡∏≤‡∏ô‡∏≤‡∏Ñ": (13.758, 100.517),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏ä‡∏±‡∏Å‡∏û‡∏£‡∏∞": (13.76, 100.456),
    "‡∏â‡∏¥‡∏°‡∏û‡∏•‡∏µ": (13.786, 100.432),
    "‡∏ï‡∏•‡∏¥‡πà‡∏á‡∏ä‡∏±‡∏ô": (13.789, 100.459),
    "‡∏ö‡∏≤‡∏á‡∏û‡∏£‡∏°": (13.752, 100.442),
    "‡∏ö‡∏≤‡∏á‡∏£‡∏∞‡∏°‡∏≤‡∏î": (13.767, 100.431),
    "‡∏ö‡∏≤‡∏á‡πÄ‡∏ä‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡∏±‡∏á": (13.751, 100.419),
    "‡∏ó‡∏ß‡∏µ‡∏ß‡∏±‡∏í‡∏ô‡∏≤": (13.758, 100.348),
    "‡∏®‡∏≤‡∏•‡∏≤‡∏ò‡∏£‡∏£‡∏°‡∏™‡∏û‡∏ô‡πå": (13.783, 100.39),
    "‡∏ó‡∏∏‡πà‡∏á‡∏Ñ‡∏£‡∏∏": (13.614, 100.497),
    "‡∏ö‡∏≤‡∏á‡∏°‡∏î": (13.651, 100.51),
    "‡∏î‡∏≤‡∏ß‡∏Ñ‡∏∞‡∏ô‡∏≠‡∏á": (13.725, 100.4858),
    "‡∏ï‡∏•‡∏≤‡∏î‡∏û‡∏•‡∏π": (13.715, 100.473),
    "‡∏ö‡∏≤‡∏á‡∏¢‡∏µ‡πà‡πÄ‡∏£‡∏∑‡∏≠": (13.72, 100.482),
    "‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡πÇ‡∏•": (13.707, 100.486),
    "‡∏ß‡∏±‡∏î‡∏Å‡∏±‡∏•‡∏¢‡∏≤‡∏ì‡πå": (13.737, 100.493),
    "‡∏™‡∏≥‡πÄ‡∏´‡∏£‡πà": (13.725, 100.4858),
    "‡∏´‡∏¥‡∏£‡∏±‡∏ç‡∏£‡∏π‡∏à‡∏µ": (13.731, 100.49),
    "‡∏ö‡∏≤‡∏á‡∏Ç‡∏∏‡∏ô‡∏ô‡∏ô‡∏ó‡πå": (13.774, 100.466),
    "‡∏ö‡∏≤‡∏á‡∏Ç‡∏∏‡∏ô‡∏®‡∏£‡∏µ": (13.76, 100.463),
    "‡∏ö‡πâ‡∏≤‡∏ô‡∏ä‡πà‡∏≤‡∏á‡∏´‡∏•‡πà‡∏≠": (13.752, 100.477),
    "‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä": (13.759, 100.481),
    "‡∏≠‡∏£‡∏∏‡∏ì‡∏≠‡∏°‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå": (13.772, 100.477),
    "‡∏ß‡∏±‡∏î‡∏ó‡πà‡∏≤‡∏û‡∏£‡∏∞": (13.733, 100.475),
    "‡∏ß‡∏±‡∏î‡∏≠‡∏£‡∏∏‡∏ì": (13.743, 100.486),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏à‡∏±‡πà‡∏ô": (13.786, 100.635),
    "‡∏´‡∏±‡∏ß‡∏´‡∏°‡∏≤‡∏Å": (13.756, 100.66),
    "‡∏ó‡πà‡∏≤‡∏Ç‡πâ‡∏≤‡∏°": (13.555, 100.434),
    "‡πÅ‡∏™‡∏°‡∏î‡∏≥": (13.605, 100.395),
    "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏≠‡πÅ‡∏´‡∏•‡∏°": (13.696, 100.494),
    "‡∏ö‡∏≤‡∏á‡πÇ‡∏Ñ‡∏•‡πà": (13.694, 100.516),
    "‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡∏¢‡∏≤‡πÑ‡∏Å‡∏£": (13.706, 100.508),
    "‡∏ö‡∏≤‡∏á‡∏ã‡∏∑‡πà‡∏≠": (13.82, 100.529),
    "‡∏ö‡∏≤‡∏á‡∏ô‡∏≤": (13.672, 100.616),
    "‡∏ö‡∏≤‡∏á‡∏ö‡∏≠‡∏ô": (13.646, 100.37),
    "‡∏ö‡∏≤‡∏á‡∏ö‡∏≥‡∏´‡∏£‡∏∏": (13.781, 100.482),
    "‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏±‡∏î": (13.791, 100.487),
    "‡∏ö‡∏≤‡∏á‡∏¢‡∏µ‡πà‡∏Ç‡∏±‡∏ô": (13.774, 100.492),
    "‡∏ö‡∏≤‡∏á‡∏≠‡πâ‡∏≠": (13.802, 100.512),
    "‡∏ö‡∏≤‡∏á‡∏£‡∏±‡∏Å": (13.727, 100.527),
    "‡∏°‡∏´‡∏≤‡∏û‡∏§‡∏í‡∏≤‡∏£‡∏≤‡∏°": (13.734, 100.52),
    "‡∏™‡∏µ‡∏•‡∏°": (13.73, 100.525),
    "‡∏™‡∏µ‡πà‡∏û‡∏£‡∏∞‡∏¢‡∏≤": (13.725, 100.514),
    "‡∏™‡∏∏‡∏£‡∏¥‡∏¢‡∏ß‡∏á‡∏®‡πå": (13.724, 100.53),
    "‡∏ó‡πà‡∏≤‡πÅ‡∏£‡πâ‡∏á": (13.866, 100.65),
    "‡∏≠‡∏ô‡∏∏‡∏™‡∏≤‡∏ß‡∏£‡∏µ‡∏¢‡πå": (13.868, 100.606),
    "‡∏ö‡∏≤‡∏á‡πÅ‡∏Ñ": (13.698, 100.409),
    "‡∏ö‡∏≤‡∏á‡πÅ‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠": (13.72, 100.4),
    "‡∏ö‡∏≤‡∏á‡πÑ‡∏ú‡πà": (13.741, 100.385),
    "‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≠‡∏á": (13.683, 100.396),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏Å‡∏∏‡πà‡∏°": (13.808, 100.65),
    "‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô": (13.74, 100.535),
    "‡∏£‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡∏≠‡∏á": (13.744, 100.52),
    "‡∏•‡∏∏‡∏°‡∏û‡∏¥‡∏ô‡∏µ": (13.736, 100.546),
    "‡∏ß‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà": (13.742, 100.526),
    "‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ": (13.68, 100.689),
    "‡∏õ‡∏£‡∏∞‡πÄ‡∏ß‡∏®": (13.719, 100.664),
    "‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏≠‡∏ô": (13.687, 100.656),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏°‡∏´‡∏≤‡∏ô‡∏≤‡∏Ñ": (13.753, 100.513),
    "‡∏ö‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ï‡∏£": (13.752, 100.507),
    "‡∏õ‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏≤‡∏ö": (13.743, 100.514),
    "‡∏ß‡∏±‡∏î‡πÄ‡∏ó‡∏û‡∏®‡∏¥‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå": (13.749, 100.512),
    "‡∏ß‡∏±‡∏î‡πÇ‡∏™‡∏°‡∏ô‡∏±‡∏™": (13.759, 100.511),
    "‡∏™‡∏≤‡∏°‡πÄ‡∏™‡∏ô‡πÉ‡∏ô": (13.782, 100.545),
    "‡∏ä‡∏ô‡∏∞‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°": (13.762, 100.495),
    "‡∏ï‡∏•‡∏≤‡∏î‡∏¢‡∏≠‡∏î": (13.76, 100.498),
    "‡∏ö‡∏ß‡∏£‡∏ô‡∏¥‡πÄ‡∏ß‡∏®": (13.757, 100.501),
    "‡∏ö‡∏≤‡∏á‡∏Ç‡∏∏‡∏ô‡∏û‡∏£‡∏´‡∏°": (13.765, 100.505),
    "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏≤‡∏ô‡∏ñ‡∏°": (13.762, 100.503),
    "‡∏û‡∏£‡∏∞‡∏ö‡∏£‡∏°‡∏°‡∏´‡∏≤‡∏£‡∏≤‡∏ä‡∏ß‡∏±‡∏á": (13.751, 100.492),
    "‡∏ß‡∏±‡∏á‡∏ö‡∏π‡∏£‡∏û‡∏≤‡∏†‡∏¥‡∏£‡∏°‡∏¢‡πå": (13.744, 100.499),
    "‡∏ß‡∏±‡∏î‡∏£‡∏≤‡∏ä‡∏ö‡∏û‡∏¥‡∏ò": (13.75, 100.499),
    "‡∏ß‡∏±‡∏î‡∏™‡∏≤‡∏°‡∏û‡∏£‡∏∞‡∏¢‡∏≤": (13.768, 100.497),
    "‡∏®‡∏≤‡∏•‡πÄ‡∏à‡πâ‡∏≤‡∏û‡πà‡∏≠‡πÄ‡∏™‡∏∑‡∏≠": (13.754, 100.503),
    "‡∏™‡∏≥‡∏£‡∏≤‡∏ç‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå": (13.751, 100.5),
    "‡πÄ‡∏™‡∏≤‡∏ä‡∏¥‡∏á‡∏ä‡πâ‡∏≤": (13.753, 100.626),
    "‡∏ö‡∏≤‡∏á‡∏à‡∏≤‡∏Å": (13.692, 100.423),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏Ç‡∏ß‡∏≤‡∏á": (13.738, 100.457),
    "‡∏Ñ‡∏π‡∏´‡∏≤‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå": (13.727, 100.45),
    "‡∏ö‡∏≤‡∏á‡∏à‡∏≤‡∏Å": (13.727, 100.437),
    "‡∏ö‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏ô": (13.723, 100.443),
    "‡∏ö‡∏≤‡∏á‡∏´‡∏ß‡πâ‡∏≤": (13.714, 100.445),
    "‡∏ö‡∏≤‡∏á‡πÅ‡∏ß‡∏Å": (13.736, 100.464),
    "‡∏õ‡∏≤‡∏Å‡∏Ñ‡∏•‡∏≠‡∏á‡∏†‡∏≤‡∏©‡∏µ‡πÄ‡∏à‡∏£‡∏¥‡∏ç": (13.722, 100.723),
    "‡∏°‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ": (13.804, 100.774),
    "‡πÅ‡∏™‡∏ô‡πÅ‡∏™‡∏ö": (13.812, 100.533),
    "‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏ô‡∏ó‡∏£‡∏µ": (13.682, 100.544),
    "‡∏ö‡∏≤‡∏á‡πÇ‡∏û‡∏á‡∏û‡∏≤‡∏á": (13.697, 100.538),
    "‡∏ñ‡∏ô‡∏ô‡∏û‡∏ç‡∏≤‡πÑ‡∏ó": (13.757, 100.559),
    "‡∏ñ‡∏ô‡∏ô‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ": (13.752, 100.53),
    "‡∏ó‡∏∏‡πà‡∏á‡∏û‡∏ç‡∏≤‡πÑ‡∏ó": (13.763, 100.528),
    "‡∏°‡∏±‡∏Å‡∏Å‡∏∞‡∏™‡∏±‡∏ô": (13.752, 100.491),
    "‡∏ö‡∏≤‡∏á‡∏õ‡∏∞‡∏Å‡∏≠‡∏Å": (13.675, 100.51),
    "‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ö‡∏π‡∏£‡∏ì‡∏∞": (13.67, 100.855),
    "‡∏Ç‡∏∏‡∏°‡∏ó‡∏≠‡∏á": (13.736, 100.723),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏™‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏ô‡∏∏‡πà‡∏ô": (13.753, 100.754),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏™‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏ß‡∏®": (13.753, 100.815),
    "‡∏ó‡∏±‡∏ö‡∏¢‡∏≤‡∏ß": (13.728, 100.771),
    "‡∏•‡∏≤‡∏î‡∏Å‡∏£‡∏∞‡∏ö‡∏±‡∏á": (13.723, 100.817),
    "‡∏•‡∏≥‡∏õ‡∏•‡∏≤‡∏ó‡∏¥‡∏ß": (13.765, 100.6),
    "‡∏à‡∏£‡πÄ‡∏Ç‡πâ‡∏ö‡∏±‡∏ß": (13.84, 100.612),
    "‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß": (13.811, 100.609),
    "‡∏ß‡∏±‡∏á‡∏ó‡∏≠‡∏á‡∏´‡∏•‡∏≤‡∏á": (13.779, 100.576),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡∏ô‡πÄ‡∏´‡∏ô‡∏∑‡∏≠": (13.736, 100.56),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢‡πÄ‡∏´‡∏ô‡∏∑‡∏≠": (13.743, 100.596),
    "‡∏û‡∏£‡∏∞‡πÇ‡∏Ç‡∏ô‡∏á‡πÄ‡∏´‡∏ô‡∏∑‡∏≠": (13.719, 100.628),
    "‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏ß‡∏á": (13.726, 100.688),
    "‡∏™‡∏∞‡∏û‡∏≤‡∏ô‡∏™‡∏π‡∏á": (13.761, 100.504),
    "‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏£‡∏£‡∏î‡∏¥": (13.741, 100.513),
    "‡∏ï‡∏•‡∏≤‡∏î‡∏ô‡πâ‡∏≠‡∏¢": (13.734, 100.511),
    "‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡∏ß‡∏á‡∏®‡πå": (13.739, 100.541),
    "‡∏ó‡∏∏‡πà‡∏á‡∏°‡∏´‡∏≤‡πÄ‡∏°‡∏Ü": (13.718, 100.532),
    "‡∏ó‡∏∏‡πà‡∏á‡∏ß‡∏±‡∏î‡∏î‡∏≠‡∏ô": (13.71, 100.514),
    "‡∏¢‡∏≤‡∏ô‡∏ô‡∏≤‡∏ß‡∏≤": (13.714, 100.63),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏ñ‡∏ô‡∏ô": (13.898, 100.654),
    "‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°": (13.921, 100.672),
    "‡∏≠‡∏≠‡πÄ‡∏á‡∏¥‡∏ô": (13.896, 100.897),
    "‡∏Å‡∏£‡∏∞‡∏ó‡∏∏‡πà‡∏°‡∏£‡∏≤‡∏¢": (13.823, 100.82),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏™‡∏¥‡∏ö": (13.914, 100.88),
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏™‡∏¥‡∏ö‡∏™‡∏≠‡∏á": (13.914, 100.81),
    "‡∏Ñ‡∏π‡πâ‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏´‡∏ô‡∏∑‡∏≠": (13.872, 100.877),
    "‡∏•‡∏≥‡∏ï‡πâ‡∏≠‡∏¢‡∏ï‡∏¥‡πà‡∏á": (13.781, 100.844),
    "‡∏•‡∏≥‡∏ú‡∏±‡∏Å‡∏ä‡∏µ": (13.797, 100.885),
    "‡∏´‡∏ô‡∏≠‡∏á‡∏à‡∏≠‡∏Å": (13.869, 100.836),
    "‡πÇ‡∏Ñ‡∏Å‡πÅ‡∏ù‡∏î": (13.84, 100.351),
    "‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡πâ‡∏≤‡∏á‡∏û‡∏•‡∏π": (13.714, 100.358),
    "‡∏´‡∏ô‡∏≠‡∏á‡πÅ‡∏Ç‡∏°": (13.68, 100.58),
    "‡∏ï‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡πÄ‡∏Ç‡∏ô": (13.871, 100.564),
    "‡∏ó‡∏∏‡πà‡∏á‡∏™‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á": (13.883, 100.586),
    "‡∏ö‡∏≤‡∏á‡∏Å‡∏∞‡∏õ‡∏¥": (13.752, 100.579),
    "‡∏™‡∏≤‡∏°‡πÄ‡∏™‡∏ô‡∏ô‡∏≠‡∏Å": (13.796, 100.577),
    "‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á": (13.769, 100.577)
}

# ------- UI layout -------
st.title("PM2.5 Prediction (PINN)")
st.caption("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏£‡∏≠‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î (‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á)")

mode = st.radio(
    "Input method:",
    ["üî¢ Manual lat-lon", "üìç Pick a city"],
    index=0,
    horizontal=True
)

if mode == "üî¢ Manual lat-lon":
    lat = st.number_input("Latitude",  -90.0,  90.0, value=14.9799)
    lon = st.number_input("Longitude",-180.0, 180.0, value=102.0973)
else:
    city_name = st.selectbox("Choose city", list(CITY_DB.keys()))
    lat, lon  = CITY_DB[city_name]
    st.success(f"üìç {city_name}  ‚Üí  lat={lat:.4f}, lon={lon:.4f}")

time_input = st.text_input(
    "Timestamp (YYYY-MM-DD HH:MM:SS)",
    value="2025-07-05 12:00:00")

# ------- ‡∏ó‡∏≥ Prediction -------
if st.button("Predict PM2.5"):
    try:
        dt        = datetime.strptime(time_input, "%Y-%m-%d %H:%M:%S")
        unix_time = int(dt.timestamp())

        X_input   = np.array([[lat, lon, unix_time]], dtype=np.float32)
        X_scaled  = scaler_x.transform(X_input)

        y_scaled  = model.predict(X_scaled)
        y_pred    = scaler_y.inverse_transform(y_scaled)

        st.metric("Predicted PM2.5 (Œºg/m¬≥)", f"{y_pred[0,0]:.2f}")
    except Exception as e:
        st.error(f"‚ö†Ô∏è Error: {e}")